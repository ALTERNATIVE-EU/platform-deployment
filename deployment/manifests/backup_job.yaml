apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup
spec:
  schedule: "@daily"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        spec:
          initContainers:
            - name: dump-postgres
              image: docker.io/bitnami/postgresql:11.14.0-debian-10-r28
              imagePullPolicy: IfNotPresent
              volumeMounts:
                - name: data
                  mountPath: /backup
              args:
                - pg_dump
                - "-Fc"
                - "-v"
                - "-f"
                - "/backup/postgres.dump"
              env:
                - name: PGHOSTADDR
                  value: "postgres_pod_ip"
                - name: PGPORT
                  value: "postgres_port"
                - name: PGDATABASE
                  value: "ckan_database"
                - name: PGUSER
                  value: "postgres_user"
                - name: PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: postgrescredentials
                      key: postgresql-password
            - name: dump-solr
              image: ellerbrock/alpine-bash-curl-ssl
              imagePullPolicy: IfNotPresent
              command:
                [
                  "/bin/bash",
                  "-c",
                  'curl -H "Content-type:application/json" "http://$SOLRADDRESS:$SOLRPORT/solr/admin/collections?action=BACKUP&collection=$SOLRCOLLECTION&name=solr.dump&location=/opt/solr/server/home"'
                ]
              env:
                - name: SOLRADDRESS
                  value: "solr_pod_ip"
                - name: SOLRPORT
                  value: "solr_port"
                - name: SOLRCOLLECTION
                  value: "solr_collection"
            - name: dump-keycloak
              image: docker.io/bitnami/postgresql:14.2.0-debian-10-r70
              imagePullPolicy: IfNotPresent
              volumeMounts:
                - name: data
                  mountPath: /backup
              args:
                - pg_dump
                - "-Fc"
                - "-v"
                - "-f"
                - "/backup/keycloak.dump"
              env:
                - name: PGHOSTADDR
                  value: "keycloak_postgresql_pod_ip"
                - name: PGPORT
                  value: "keycloak_postgresql_port"
                - name: PGDATABASE
                  value: "keycloak_database"
                - name: PGUSER
                  value: "keycloak_postgresql_user"
                - name: PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: keycloak-postgresql
                      key: password
          containers:
            - name: save
              image: d3fk/s3cmd
              imagePullPolicy: IfNotPresent
              volumeMounts:
                - name: data
                  mountPath: /backup
                - name: solr-pvc
                  mountPath: /backup-solr
              command:
                [
                  "/bin/sh",
                  "-c",
                  "s3cmd --host=$HOST --access_key=$S3_KEY --secret_key=$S3_SECRET --host-bucket=$BUCKET.$HOST put /backup/postgres.dump s3://$BUCKET/postgres/postgres-$(date +'%d-%m-%Y').dump ; s3cmd --host=$HOST --access_key=$S3_KEY --secret_key=$S3_SECRET --host-bucket=$BUCKET.$HOST put --recursive /backup-solr/solr.dump s3://$BUCKET/solr/solr-$(date +'%d-%m-%Y').dump/ ; rm -rf /backup-solr/solr.dump ; s3cmd --host=$HOST --access_key=$S3_KEY --secret_key=$S3_SECRET --host-bucket=$BUCKET.$HOST put /backup/keycloak.dump s3://$BUCKET/keycloak/keycloak-$(date +'%d-%m-%Y').dump"
                ]
              env:
                - name: BUCKET
                  value: "bucket_name"
                - name: HOST
                  value: "s3_host"
                - name: S3_KEY
                  valueFrom:
                    secretKeyRef:
                      name: backup-credentials
                      key: s3_key
                - name: S3_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: backup-credentials
                      key: s3_secret
          restartPolicy: Never
          volumes:
            - name: data
              emptyDir: {}
            - name: solr-pvc
              persistentVolumeClaim:
                claimName: solr-pvc-solr-0
